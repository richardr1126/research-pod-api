name: research-pod

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CLUSTER_ID: 'KafkaKRaftCluster'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  
  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=researchpod
      - POSTGRES_PASSWORD=research-pod-password
      - POSTGRES_DB=researchpod
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "researchpod"]
      interval: 5s
      timeout: 3s
      retries: 5

  research-consumer:
    build: 
      context: ./research/
      dockerfile: Dockerfile
    volumes:
      - ./research/data:/app/data
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - REDIS_URL=redis://redis:6379
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://researchpod:research-pod-password@postgres:5432/researchpod
      - TTS_BASE_URL=https://koko.richardr.dev/v1
    env_file:
      - ./research/.env
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy

  web-api:
    build: 
      context: ./web/
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - REDIS_URL=redis://redis:6379
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://researchpod:research-pod-password@postgres:5432/researchpod
      - FLASK_APP=server:server
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  db: